@model BOL.tbl_EVENEMENT

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/scripts/jquery-1.10.2.js"></script>
<script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDY0kkJiTPVd2U7aTOAwhc9ySH6oHxOIYM&sensor=false"></script>

<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', initialize);
        var markersArray = [];
        var gmarkers = [];
        var map;
  

        function initialize() {
            initMap();
            google.maps.event.addListener(map, "click", function (event) {
                // place a marker
                placeMarker(event.latLng);

                // display the lat/lng in your form's lat/lng fields
                document.getElementById("latFld").value = event.latLng.lat();
                document.getElementById("lngFld").value = event.latLng.lng();
            });
           
        }

       

        function placeMarker(location) {
            // first remove all markers if there are any
            deleteOverlays();

            var marker = new google.maps.Marker({
                position: location,
                map: map
            });

            // add marker in markers array
            markersArray.push(marker);

            //map.setCenter(location);
        }

        function initMap() {
            var mapProp = {
                center: new google.maps.LatLng(18.9243672, -73.5775306), //India Lat and Lon
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
           
        }
        function deleteOverlays() {
            if (markersArray) {
                for (i in markersArray) {
                    markersArray[i].setMap(null);
                }
                markersArray.length = 0;
            }
        }

</script>


<section class="content-header">
    <h1>
        Nouvel Évenement
    </h1>
</section>






<section class="content">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header">
                <h3 class="box-title">Carte</h3>

                <div class="box-tools">
                    <div class="input-group input-group-sm" style="width: 150px;">
                        <input type="text" name="table_search" class="form-control pull-right" placeholder="Search">

                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                </div>
            </div>



            <div class="box-body">

                <div id="googleMap" style="width:auto;height:500px;"></div>
            </div>
            
        </div>

        `
    </div>

    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Informations sur l'évenement</h3>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="box-body">
                       
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.priorite, "priorite", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("priorite", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.priorite, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.startDate, htmlAttributes: new { @class = "control-label col-md-2" })


                            <div class="col-md-10">
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control datepicker" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
                            </div>



                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.endDate, htmlAttributes: new { @class = "control-label col-md-2" })


                            <div class="col-md-10">
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control datepicker" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
                            </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.lattitude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.lattitude, new { htmlAttributes = new { @class = "form-control", @id = "latFld" } })
                                    @Html.ValidationMessageFor(model => model.lattitude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.longittude, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.longittude, new { htmlAttributes = new { @class = "form-control", @id = "lngFld" } })
                                    @Html.ValidationMessageFor(model => model.longittude, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.menace, "menace", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("menace", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.menace, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.type, "type", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("type", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary pull-right">Submit</button>
                    </div>
                    </div>
            }
</div>
`</div>
</section>
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker({
            format: "mm/dd/yyyy",
            autoclose: true
        }); //Initialise any date pickers

    });
</script>