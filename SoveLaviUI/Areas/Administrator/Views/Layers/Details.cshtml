@model BOL.tbl_LAYER

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/scripts/jquery-1.10.2.js"></script>
<script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
<script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDY0kkJiTPVd2U7aTOAwhc9ySH6oHxOIYM&sensor=false"></script>

<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', initialize);

        var gmarkers = [];
        var map;
        var geodata;

        function initialize() {
            initMap();

            GetLayerData();
        }



        function initMap() {
            var mapProp = {
                center: new google.maps.LatLng(18.9243672, -73.5775306), //India Lat and Lon
                zoom: 8,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
           // map.data.loadGeoJson('http://localhost:89/Layers/fbdf03a3-fea7-445a-bd18-90c38f5d2c41-commune.json');
        }
        function GetLayerData() {
            $.ajax({
                url: "@ViewBag.GeoJsonUrl",
                dataType: "json",
                type: "GET",
                contentType: 'application/json; charset=utf-8',
                async: true,
                processData: false,
                cache: false,
                success: function (data) {
                    map.data.addGeoJson(data);

                    data.features.forEach(function (feat) {
                        var geom = feat.geometry;
                        var props = feat.properties;

                        if (geom.type === 'MultiPolygon') {
                            for (var i = 0; i < geom.coordinates.length; i++) {
                                var polygon = {
                                    'type': 'Polygon',
                                    'coordinates': geom.coordinates[i],
                                    'properties': props
                                };

                                console.log(JSON.stringify(polygon));
                                google.maps.event.addListener(feat.geometry, "mouseover", function () {
                                    this.setOptions({ fillColor: "#00FF00" });
                                });

                                google.maps.event.addListener(mfeat.geometry, "mouseout", function () {
                                    this.setOptions({ fillColor: "#FF0000" });
                                });
                            }
                        }
                    });

                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }




</script>

<h2>Details</h2>
<div id="googleMap" style="width:auto;height:500px;"></div>
<div>
    <h4>tbl_LAYER</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.fileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.fileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.dateAdded)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.dateAdded)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.validFrom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.validFrom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.validTo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.validTo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.imageName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.imageName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tbl_LAYER_CATEGORY.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tbl_LAYER_CATEGORY.name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.tbl_LAYER_TYPE.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.tbl_LAYER_TYPE.name)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
